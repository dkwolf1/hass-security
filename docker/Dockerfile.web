# syntax=docker/dockerfile:1.4
########################################################################################################################
# Web Image
########################################################################################################################

######## Build the frontend
FROM --platform=${BUILDPLATFORM} node AS frontendbuild
WORKDIR /go/src/github.com/hass-security/hass-security
COPY --link . /go/src/github.com/hass-security/hass-security

RUN make binary-frontend

######## Build the backend
FROM golang:1.20-bookworm as backendbuild

WORKDIR /go/src/github.com/hass-security/hass-security
COPY --link . /go/src/github.com/hass-security/hass-security

RUN apt-get update && apt-get install -y file && rm -rf /var/lib/apt/lists/*
RUN make binary-clean binary-all WEB_BINARY_NAME=hass-security


######## Combine build artifacts in runtime image
FROM debian:bookworm-slim as runtime
EXPOSE 8080
WORKDIR /opt/hass-security
ENV PATH="/opt/hass-security/bin:${PATH}"

RUN apt-get update && apt-get install -y ca-certificates curl tzdata && rm -rf /var/lib/apt/lists/* && update-ca-certificates

COPY --link --from=backendbuild --chmod=755 /go/src/github.com/hass-security/hass-security/hass-security /opt/hass-security/bin/
COPY --link --from=frontendbuild --chmod=644 /go/src/github.com/hass-security/hass-security/dist /opt/hass-security/web
RUN mkdir -p /opt/hass-security/web && \
    mkdir -p /opt/hass-security/config && \
    chmod -R a+rX /opt/hass-security && \
    chmod -R a+w /opt/hass-security/config
CMD ["/opt/hass-security/bin/hass-security", "start"]
